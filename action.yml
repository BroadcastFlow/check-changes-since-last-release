name: Check Changes Since Last Release
description: Checks if there were changes in the provided directory since the last release
inputs:
  directory:
    description: The directory to check for changes
    required: true
  commitMessage: # New input for commit message
    description: 'The message of the commit'
    required: true
outputs:
  changed:
    description: True if the directory has changed since the last release, false otherwise
    value: ${{ steps.check-changes.outputs.changed }}
runs:
  using: composite
  steps:
    - id: check-changes
      run: |
        echo "Checking changes in ${{ inputs.directory }}"

        LATEST_TAG=$(git tag --sort=-creatordate | head -n 1 2>/dev/null || echo "")
        PREVIOUS_TAG=$(git tag --sort=-creatordate | sed -n '2{p;q}' 2>/dev/null || echo "")

        CURRENT_COMMIT_MSG="${{ inputs.commitMessage }}"
        echo "Current commit message: $CURRENT_COMMIT_MSG"

        if [[ ! $CURRENT_COMMIT_MSG =~ ^chore.*release ]]; then
          echo "This commit is not a release. Skipping."
          echo "::set-output name=changed::false"
        elif [[ -z "$LATEST_TAG" ]]; then
          echo "No tags found. Assuming no changes."
          echo "::set-output name=changed::false"
        else
          # Check if directory exists at the latest tag
          DIRECTORY_EXISTS=$(git ls-tree -d $LATEST_TAG -- ${{ inputs.directory }} | wc -l)
          if [[ "$DIRECTORY_EXISTS" == "0" ]]; then
            echo "Directory does not exist at the latest tag. Assuming no changes."
            echo "::set-output name=changed::false"
          elif [[ -z "$PREVIOUS_TAG" ]]; then
            echo "Only one tag found. Assuming changes."
            echo "::set-output name=changed::true"
          else
            # Check if directory exists between the tags, if not, assume no changes
            if git diff --quiet $PREVIOUS_TAG..$LATEST_TAG -- ${{ inputs.directory }} &>/dev/null; then
              echo "No changes in ${{ inputs.directory }} between last two releases."
              echo "::set-output name=changed::false"
            else
              echo "Changes detected in ${{ inputs.directory }} between last two releases."
              echo "::set-output name=changed::true"
            fi
          fi
        fi
      shell: bash
