name: Check Changes Since Last Release
description: Checks if there were changes in the provided directory since the last release
inputs:
  directory:
    description: The directory to check for changes
    required: true
  commitMessage: # New input for commit message
    description: 'The message of the commit'
    required: true
outputs:
  changed:
    description: True if the directory has changed since the last release, false otherwise
    value: ${{ steps.check-changes.outputs.changed }}
runs:
  using: composite
  steps:
    - name: Check commit message
      id: check_message
      run: |
        COMMIT_MSG="${{ inputs.commitMessage }}"
        if [[ ! $COMMIT_MSG =~ ^chore.*release ]]; then
          echo "Current commit message does not start with 'chore', exiting job."
          echo "IS_CORRECT_COMMIT=false" >> $GITHUB_ENV
          exit 0
        else
          echo "Current commit message starts with 'chore', proceeding with job."
          echo "IS_CORRECT_COMMIT=true" >> $GITHUB_ENV
        fi

    - id: check-changes
      run: >
        echo "Checking changes in ${{ inputs.directory }}"

        # Get the latest two tags
        LATEST_TAG=$(git tag --sort=-creatordate | head -n 1)
        PREVIOUS_TAG=$(git tag --sort=-creatordate | sed -n '2{p;q}')

        echo "Latest tag: $LATEST_TAG"
        echo "Previous tag: $PREVIOUS_TAG"

        CURRENT_COMMIT_MSG="${{ inputs.commitMessage }}"
        CHANGE_FOLDER="${{ inputs.directory }}"
        
        echo "Current commit message: $CURRENT_COMMIT_MSG"

        # If no tags exist, assume no changes
        if [ -z "$LATEST_TAG" ]; then
            echo "No tags found, assuming no changes."
            echo "HAS_CHANGES=false" >> $GITHUB_ENV
        # If there's a latest tag but no previous tag, assume it has changed
        elif [ -z "$PREVIOUS_TAG" ]; then
            echo "Only one tag found, assuming changes."
            echo "HAS_CHANGES=true" >> $GITHUB_ENV
        else
            # Check for file changes in the specific folder between the latest two tags
            CHANGES=$(git diff --name-only $PREVIOUS_TAG $LATEST_TAG -- "$CHANGE_FOLDER")

            if [ -z "$CHANGES" ]; then
                echo "No changes in $CHANGE_FOLDER between $PREVIOUS_TAG and $LATEST_TAG."
                echo "HAS_CHANGES=false" >> $GITHUB_ENV
            else
                echo "Changes detected in $CHANGE_FOLDER between $PREVIOUS_TAG and $LATEST_TAG:"
                echo "$CHANGES"
                echo "HAS_CHANGES=true" >> $GITHUB_ENV
            fi
        fi
      shell: bash
